{"version":3,"file":"ngx-floating.mjs","sources":["../../../libs/ngx-floating/src/ngx-floating/ngx-floating.component.ts","../../../libs/ngx-floating/src/ngx-floating/ngx-floating.component.html","../../../libs/ngx-floating/src/ngx-floating/ngx-floating.service.ts","../../../libs/ngx-floating/src/ngx-floating/ngx-floating.directive.ts","../../../libs/ngx-floating/src/index.ts","../../../libs/ngx-floating/src/ngx-floating.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  Type,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nexport type Boundary = HTMLElement | {\n  top?: number;\n  right?: number;\n  bottom?: number;\n  left?: number;\n};\n\nexport interface FloatingOffset {\n  top?: number;\n  right?: number;\n  bottom?: number;\n  left?: number;\n  inner?: boolean;\n}\n\nexport interface RelativePosition {\n  top?: number;\n  right?: number;\n  bottom?: number;\n  left?: number;\n}\n\n@Component({\n  selector: 'ngx-floating',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './ngx-floating.component.html',\n  styleUrls: ['./ngx-floating.component.scss']\n})\nexport class NgxFloatingComponent implements AfterViewInit, OnChanges, OnDestroy {\n  @Input({transform: (value: string | boolean) => (typeof value == 'boolean' ? value : value === 'true'||value === 'movable')})\n  movable = false;\n  /**\n   * 目标元素，用于定位浮动组件的位置。\n   * 如果不设置，浮动组件将以整个窗口作为参考对象。\n   */\n  @Input() at?: HTMLElement;\n  @Input() offset: FloatingOffset = {top: 0};\n  @Input() zIndex: number = 2;\n  @Input() isVisible = true;\n  @Input() boundary: Boundary = document.documentElement;\n  @Input() ignoreBoundary = false;\n  @Input() content?: TemplateRef<any> | Type<any> | string;\n\n  // 改为变量存储样式\n  positionStyle: { [key: string]: string } = {position: 'fixed'};\n  private relativePosition?: RelativePosition;\n  private boundaryRect?: DOMRect;\n  private floatRect?: DOMRect;\n  private atRect?: DOMRect;\n  private observer: ResizeObserver;\n\n  @ViewChild('floatingRef', {static: true}) floatingRef!: ElementRef;\n  @ViewChild('componentContainer', {read: ViewContainerRef}) componentContainer!: ViewContainerRef;\n\n  private isDragging = false;\n  private startX = 0;\n  private startY = 0;\n  private componentRef?: ComponentRef<any>;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    this.observer = new ResizeObserver(() => this.updatePosition());\n  }\n\n  @HostBinding('style.cursor') get cursor() {\n    return this.movable ? 'move' : 'default';\n  }\n\n  @HostBinding('style.visibility')\n  get isHidden() {\n    return !this.isVisible? 'hidden' : 'visible';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const needsUpdate = ['at', 'offset', 'boundary'].some(key => changes[key]);\n    if (needsUpdate) {\n      this.updatePosition();\n    }\n\n    if (changes['content'] && this.content) {\n      if (this.isComponent(this.content)) {\n        this.renderComponent(this.content as Type<any>);\n      }\n    }\n  }\n\n  isTemplateRef(content: any): content is TemplateRef<any> {\n    return content instanceof TemplateRef;\n  }\n\n  isComponent(content: any): content is Type<any> {\n    return typeof content === 'function';\n  }\n\n  isString(content: any): content is string {\n    return typeof content === 'string';\n  }\n\n  private renderComponent(component: Type<any>) {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    this.componentRef = this.componentContainer.createComponent(componentFactory);\n    this.cdr.detectChanges();\n  }\n\n  private validateOffset(offset: FloatingOffset) {\n    // 确保只能设置四个角落的位置\n    const hasTop = offset.top !== undefined;\n    const hasBottom = offset.bottom !== undefined;\n    const hasLeft = offset.left !== undefined;\n    const hasRight = offset.right !== undefined;\n\n    // 如果同时设置了上下或左右，保留第一个设置的值\n    if (hasTop && hasBottom) {\n      delete offset.bottom;\n    }\n    if (hasLeft && hasRight) {\n      delete offset.right;\n    }\n    // 如果没有设置任何位置，默认设置左上角\n    if (!hasTop && !hasBottom && !hasLeft && !hasRight) {\n      offset.top = 0;\n      offset.left = 0;\n    }\n    return offset;\n  }\n\n  ngAfterViewInit() {\n    if (this.movable) {\n      this.initDragEvents();\n    }\n    this.initObserver();\n    setTimeout(() => {\n      this.updatePosition();\n    });\n  }\n\n  ngOnDestroy() {\n    this.observer.disconnect();\n    window.removeEventListener(\"scroll\", this.updatePosition.bind(this));\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  // region 公共方法\n  /**\n   * 显示浮动组件\n   */\n  show() {\n    this.isVisible = true;\n  }\n\n  /**\n   * 隐藏浮动组件\n   */\n  hide() {\n    this.isVisible = false;\n    console.log(\"隐藏浮动组件\");\n  }\n\n  /**\n   * 重置浮动组件到初始位置\n   */\n  reset() {\n    this.relativePosition = undefined;\n    this.updatePosition();\n  }\n\n  // endregion\n\n  private initObserver() {\n    const observeTargets = [\n      this.at,\n      this.floatingRef.nativeElement,\n      this.boundary instanceof HTMLElement ? this.boundary : document.body,\n      document.body\n    ].filter(Boolean);\n    window.addEventListener(\"scroll\", this.updatePosition.bind(this))\n    observeTargets.forEach(target => this.observer.observe(target));\n  }\n\n  private updatePosition() {\n    this.calcRects();\n    this.calcBoundaryRect();\n    this.applyPosition();\n    this.applyBoundary();\n    this.cdr.detectChanges();\n  }\n\n  private calcRects() {\n    this.atRect = this.at ? this.at.getBoundingClientRect() : new DOMRect(0, 0, window.innerWidth, window.innerHeight);\n    this.floatRect = this.floatingRef.nativeElement.getBoundingClientRect();\n\n    // 检查目标元素是否在视口内\n    if (this.at) {\n      const viewportRect = new DOMRect(0, 0, window.innerWidth, window.innerHeight);\n      const isInViewport = !(this.atRect.right < 0 ||\n        this.atRect.left > viewportRect.width ||\n        this.atRect.bottom < 0 ||\n        this.atRect.top > viewportRect.height);\n\n      if (!isInViewport) {\n        this.hide();\n        return;\n      }\n      this.show();\n    }\n  }\n\n  private calcBoundaryRect() {\n    if (this.boundary instanceof HTMLElement) {\n      this.boundaryRect = this.boundary.getBoundingClientRect();\n    } else {\n      this.boundaryRect = new DOMRect(\n        this.boundary.left || 0,\n        this.boundary.top || 0,\n        (this.boundary.right ?? window.innerWidth) - (this.boundary.left || 0),\n        (this.boundary.bottom ?? window.innerHeight) - (this.boundary.top || 0)\n      );\n    }\n  }\n\n  private applyPosition() {\n    this.positionStyle = {position: 'fixed'};\n    const isInner = this.offset.inner || !this.at;\n\n    // 验证并规范化 offset 设置\n    this.offset = this.validateOffset(this.offset);\n\n    // 如果存在相对位置，使用相对位置计算\n    if (this.relativePosition) {\n      // 水平定位\n      if ('left' in this.relativePosition) {\n        const base = isInner ? this.atRect!.left : this.atRect!.right;\n        this.positionStyle['left'] = `${base + this.relativePosition.left!}px`;\n      } else if ('right' in this.relativePosition) {\n        const base = isInner ? this.atRect!.right : this.atRect!.left;\n        const right = isInner ? this.relativePosition.right! : window.innerWidth - base + this.relativePosition.right!;\n        this.positionStyle['left'] = `${isInner ? base - right - this.floatRect!.width : window.innerWidth - right}px`;\n      }\n\n      // 垂直定位\n      if ('top' in this.relativePosition) {\n        const base = isInner ? this.atRect!.top : this.atRect!.bottom;\n        this.positionStyle['top'] = `${base + this.relativePosition.top!}px`;\n      } else if ('bottom' in this.relativePosition) {\n        const base = isInner ? this.atRect!.bottom : this.atRect!.top;\n        const bottom = isInner ? this.relativePosition.bottom! : window.innerHeight - base + this.relativePosition.bottom!;\n        this.positionStyle['top'] = `${isInner ? base - bottom - this.floatRect!.height : window.innerHeight - bottom}px`;\n      }\n    } else {\n      // 使用初始 offset 设置\n      // 水平定位\n      if (this.offset.left !== undefined) {\n        const base = isInner ? this.atRect!.left : this.atRect!.right;\n        this.positionStyle['left'] = `${base + this.offset.left}px`;\n        this.relativePosition = {...this.relativePosition ?? {}, left: this.offset.left};\n      } else if (this.offset.right !== undefined) {\n        const base = isInner ? this.atRect!.right : this.atRect!.left;\n        const right = isInner ? this.offset.right : window.innerWidth - base + this.offset.right;\n        this.positionStyle['left'] = `${isInner ? base - right - this.floatRect!.width : window.innerWidth - right}px`;\n        this.relativePosition = {...this.relativePosition ?? {}, right: this.offset.right};\n      }\n\n      // 垂直定位\n      if (this.offset.top !== undefined) {\n        const base = isInner ? this.atRect!.top : this.atRect!.bottom;\n        this.positionStyle['top'] = `${base + this.offset.top}px`;\n        this.relativePosition = {...this.relativePosition, top: this.offset.top};\n      } else if (this.offset.bottom !== undefined) {\n        const base = isInner ? this.atRect!.bottom : this.atRect!.top;\n        const bottom = isInner ? this.offset.bottom : window.innerHeight - base + this.offset.bottom;\n        this.positionStyle['top'] = `${isInner ? base - bottom - this.floatRect!.height : window.innerHeight - bottom}px`;\n        this.relativePosition = {...this.relativePosition, bottom: this.offset.bottom};\n      }\n    }\n  }\n\n  private applyBoundary() {\n    if (!this.floatRect || this.ignoreBoundary || !this.boundary) return;\n\n    const defaultBoundary = new DOMRect(0, 0, window.innerWidth, window.innerHeight);\n    const effectiveBoundary = this.boundary === document.documentElement ? defaultBoundary : (this.boundaryRect || defaultBoundary);\n\n    // 水平约束\n    if ('left' in this.positionStyle) {\n      const left = Math.max(\n        effectiveBoundary.left,\n        Math.min(\n          parseFloat(this.positionStyle['left']),\n          effectiveBoundary.right - this.floatRect.width\n        )\n      );\n      this.positionStyle['left'] = `${left}px`;\n    } else if ('right' in this.positionStyle) {\n      const right = Math.max(\n        window.innerWidth - effectiveBoundary.right,\n        Math.min(\n          parseFloat(this.positionStyle['right']),\n          window.innerWidth - effectiveBoundary.left - this.floatRect.width\n        )\n      );\n      this.positionStyle['right'] = `${right}px`;\n    }\n\n    // 垂直约束\n    if ('top' in this.positionStyle) {\n      const top = Math.max(\n        effectiveBoundary.top,\n        Math.min(\n          parseFloat(this.positionStyle['top']),\n          effectiveBoundary.bottom - this.floatRect.height\n        )\n      );\n      this.positionStyle['top'] = `${top}px`;\n    } else if ('bottom' in this.positionStyle) {\n      const bottom = Math.max(\n        window.innerHeight - effectiveBoundary.bottom,\n        Math.min(\n          parseFloat(this.positionStyle['bottom']),\n          window.innerHeight - effectiveBoundary.top - this.floatRect.height\n        )\n      );\n      this.positionStyle['bottom'] = `${bottom}px`;\n    }\n  }\n\n  private initDragEvents() {\n    const floatingElement = this.floatingRef.nativeElement;\n    this.renderer.listen(floatingElement, 'mousedown', (e: MouseEvent) => this.onMouseDown(e));\n    this.renderer.listen(document, 'mousemove', (e: MouseEvent) => this.onMouseMove(e));\n    this.renderer.listen(document, 'mouseup', () => this.onMouseUp());\n  }\n\n  private onMouseDown(event: MouseEvent) {\n    if (!this.movable) return;\n    this.isDragging = true;\n\n    // 记录鼠标相对于元素的偏移量\n    const rect = this.floatingRef.nativeElement.getBoundingClientRect();\n    this.startX = event.clientX - rect.left;\n    this.startY = event.clientY - rect.top;\n\n    event.preventDefault();\n  }\n\n  private onMouseMove(event: MouseEvent) {\n    if (!this.isDragging) return;\n\n    // 计算新位置，保持鼠标相对于元素的偏移量不变\n    const newLeft = event.clientX - this.startX;\n    const newTop = event.clientY - this.startY;\n\n    // 更新位置样式\n    this.positionStyle = {\n      position: 'fixed',\n      left: `${newLeft}px`,\n      top: `${newTop}px`,\n    };\n\n    // 更新相对位置，保持与原始offset设置相同的方位\n    if (this.atRect) {\n      const isInner = this.offset.inner || !this.at;\n      const newRelativePosition: RelativePosition = {};\n\n      // 水平方向：根据原始offset的设置决定使用left还是right\n      if (this.offset.left !== undefined) {\n        const base = isInner ? this.atRect.left : this.atRect.right;\n        newRelativePosition.left = newLeft - base;\n      } else if (this.offset.right !== undefined) {\n        const base = isInner ? this.atRect.right : this.atRect.left;\n        if (isInner) {\n          newRelativePosition.right = base - newLeft - this.floatRect!.width;\n        } else {\n          newRelativePosition.right = window.innerWidth - newLeft - base;\n        }\n      }\n\n      // 垂直方向：根据原始offset的设置决定使用top还是bottom\n      if (this.offset.top !== undefined) {\n        const base = isInner ? this.atRect.top : this.atRect.bottom;\n        newRelativePosition.top = newTop - base;\n      } else if (this.offset.bottom !== undefined) {\n        const base = isInner ? this.atRect.bottom : this.atRect.top;\n        if (isInner) {\n          newRelativePosition.bottom = base - newTop - this.floatRect!.height;\n        } else {\n          newRelativePosition.bottom = window.innerHeight - newTop - base;\n        }\n      }\n\n      this.relativePosition = newRelativePosition;\n\n      // 只有在设置了boundary时才应用边界约束\n      if (this.boundary) {\n        this.applyBoundary();\n      }\n      this.cdr.detectChanges();\n    }\n  }\n\n  private onMouseUp() {\n    this.isDragging = false;\n  }\n\n\n  /**\n   * 更新浮动组件位置\n   */\n  updateFloatingPosition() {\n    this.updatePosition();\n  }\n}\n","<!-- ngx-floating -->\n<div\n    #floatingRef\n    [ngStyle]=\"positionStyle\"\n    [style.z-index]=\"zIndex\"\n    class=\"ngx-floating\">\n    <div class=\"content\">\n        <ng-container *ngIf=\"!content\">\n            <ng-content></ng-content>\n        </ng-container>\n        <ng-container *ngIf=\"content\">\n            <ng-container *ngIf=\"isTemplateRef(content)\">\n                <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"isComponent(content)\">\n                <ng-container #componentContainer></ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"isString(content)\">\n                {{content}}\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  TemplateRef,\n  Type\n} from '@angular/core';\nimport {Boundary, FloatingOffset, NgxFloatingComponent} from './ngx-floating.component';\n\nexport interface NgxFloatingServiceOptions {\n  at?: HTMLElement;\n  content: TemplateRef<any> | Type<any> | string;\n  movable?: boolean;\n  offset?: FloatingOffset;\n  boundary?: Boundary;\n  ignoreBoundary?: boolean;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFloatingService {\n  private floatingComponents: Map<string, ComponentRef<NgxFloatingComponent>> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {\n  }\n\n  /**\n   * 创建一个浮动组件\n   * @param id 组件唯一标识\n   * @param options 配置选项\n   */\n  create(id: string, options: NgxFloatingServiceOptions) {\n    if (this.floatingComponents.has(id)) {\n      console.warn(`浮动组件 ${id} 已存在`);\n    }\n\n    // 创建组件工厂\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(NgxFloatingComponent);\n    // 创建组件\n    const componentRef = componentFactory.create(this.injector);\n    const component = componentRef.instance;\n    // 设置组件属性\n    component.at = options.at;\n    component.movable = options.movable || false;\n    if (options.offset) component.offset = options.offset;\n    if (options.boundary) component.boundary = options.boundary;\n    component.ignoreBoundary = options.ignoreBoundary || false;\n    component.content = options.content;\n\n    // 将组件添加到ApplicationRef\n    this.appRef.attachView(componentRef.hostView);\n\n    // 将组件添加到DOM\n    const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n\n    this.floatingComponents.set(id, componentRef);\n    return component;\n  }\n\n  /**\n   * 获取指定ID的浮动组件\n   * @param id 组件唯一标识\n   */\n  get(id: string): NgxFloatingComponent | undefined {\n    return this.floatingComponents.get(id)?.instance;\n  }\n\n  /**\n   * 销毁指定ID的浮动组件\n   * @param id 组件唯一标识\n   */\n  destroy(id: string) {\n    const componentRef = this.floatingComponents.get(id);\n    if (componentRef) {\n      // 从DOM中移除组件\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      domElem.remove();\n\n      // 从ApplicationRef中分离视图\n      this.appRef.detachView(componentRef.hostView);\n\n      // 销毁组件\n      componentRef.destroy();\n      this.floatingComponents.delete(id);\n    }\n  }\n\n  /**\n   * 销毁所有浮动组件\n   */\n  destroyAll() {\n    this.floatingComponents.forEach(componentRef => {\n      // 从DOM中移除组件\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      domElem.remove();\n\n      // 从ApplicationRef中分离视图\n      this.appRef.detachView(componentRef.hostView);\n\n      // 销毁组件\n      componentRef.destroy();\n    });\n    this.floatingComponents.clear();\n  }\n\n  /**\n   * 显示指定ID的浮动组件\n   * @param id 组件唯一标识\n   */\n  show(id: string) {\n    this.floatingComponents.get(id)?.instance.show();\n  }\n\n  /**\n   * 隐藏指定ID的浮动组件\n   * @param id 组件唯一标识\n   */\n  hide(id: string) {\n    this.floatingComponents.get(id)?.instance.hide();\n  }\n\n  /**\n   * 重置指定ID的浮动组件位置\n   * @param id 组件唯一标识\n   */\n  reset(id: string) {\n    this.floatingComponents.get(id)?.instance.reset();\n  }\n\n  /**\n   * 更新指定ID的浮动组件位置\n   * @param id 组件唯一标识\n   */\n  updatePosition(id: string) {\n    this.floatingComponents.get(id)?.instance.updateFloatingPosition();\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, Directive, ElementRef, EmbeddedViewRef, Injector, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NgxFloatingComponent } from './ngx-floating.component';\n\n@Directive({\n    selector: '[ngxFloating]',\n    standalone: true\n})\nexport class NgxFloatingDirective implements OnInit, OnChanges, OnDestroy {\n    @Input() ngxFloating: boolean = true;\n    @Input() movable: boolean = false;\n    @Input() at?: HTMLElement;\n    @Input() offset: any;\n    @Input() boundary: any;\n    @Input() ignoreBoundary: boolean = false;\n\n    private floatingComponent?: NgxFloatingComponent;\n    private componentRef?: ComponentRef<NgxFloatingComponent>;\n\n    constructor(\n        private elementRef: ElementRef,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private appRef: ApplicationRef,\n        private injector: Injector\n    ) {}\n\n    ngOnInit() {\n        if (this.ngxFloating) {\n            this.createFloatingComponent();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.floatingComponent) return;\n\n        if (changes['movable']) {\n            this.floatingComponent.movable = this.movable;\n        }\n        if (changes['at']) {\n            this.floatingComponent.at = this.at || this.elementRef.nativeElement;\n        }\n        if (changes['offset']) {\n            this.floatingComponent.offset = this.offset;\n        }\n        if (changes['boundary']) {\n            this.floatingComponent.boundary = this.boundary;\n        }\n        if (changes['ignoreBoundary']) {\n            this.floatingComponent.ignoreBoundary = this.ignoreBoundary;\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyFloatingComponent();\n    }\n\n    private createFloatingComponent() {\n        // 创建组件工厂\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(NgxFloatingComponent);\n        \n        // 创建组件\n        this.componentRef = componentFactory.create(this.injector);\n        this.floatingComponent = this.componentRef.instance;\n        \n        // 设置组件属性\n        this.floatingComponent.at = this.at || this.elementRef.nativeElement;\n        this.floatingComponent.movable = this.movable;\n        if (this.offset) this.floatingComponent.offset = this.offset;\n        if (this.boundary) this.floatingComponent.boundary = this.boundary;\n        this.floatingComponent.ignoreBoundary = this.ignoreBoundary;\n\n        // 将组件添加到DOM\n        const domElem = (this.componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n        document.body.appendChild(domElem);\n\n        // 将组件添加到ApplicationRef\n        this.appRef.attachView(this.componentRef.hostView);\n    }\n\n    private destroyFloatingComponent() {\n        if (this.componentRef) {\n            // 从DOM中移除组件\n            const domElem = (this.componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n            domElem.remove();\n\n            // 从ApplicationRef中分离视图\n            this.appRef.detachView(this.componentRef.hostView);\n\n            // 销毁组件\n            this.componentRef.destroy();\n\n            // 清理引用\n            this.componentRef = undefined;\n            this.floatingComponent = undefined;\n        }\n    }\n\n    /**\n     * 重置浮动组件到初始位置\n     */\n    reset() {\n        this.floatingComponent?.reset();\n    }\n\n    /**\n     * 显示浮动组件\n     */\n    show() {\n        this.floatingComponent?.show();\n    }\n\n    /**\n     * 隐藏浮动组件\n     */\n    hide() {\n        this.floatingComponent?.hide();\n    }\n\n    /**\n     * 更新浮动组件位置\n     */\n    updatePosition() {\n        this.floatingComponent?.updateFloatingPosition();\n    }\n}","/*\n * Public API Surface of ngx-floating\n */\n\nexport * from \"./ngx-floating/index\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}